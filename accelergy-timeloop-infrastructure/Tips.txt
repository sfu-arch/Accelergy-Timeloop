To install Accelergy-Timeloop natively without using docker, do the followings:
	Install pip by doing the followings:
		Make a new folder in Home directory and name it "local"
		Open Terminal
		Type these commands:
			curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
			python3 get-pip.py --user --target=/localhome/mta188/local
		Open Home/.bashrc file and add these lines at the the end of the file:
			export HOME=/localhome/mta188:$HOME
			export CPATH=$HOME/local/include:$CPATH
			export LIBRARY_PATH=$HOME/local/lib:$LIBRARY_PATH
			export LD_LIBRARY_PATH=$HOME/local/lib:$LD_LIBRARY_PATH
			export CPLUS_INCLUDE_PATH=$HOME/local/include:$CPLUS_INCLUDE_PATH
			export PKG_CONFIG_PATH=/localhome/mta188/local/lib/pkgconfig:$PKG_CONFIG_PATH
			export PYTHONPATH=/localhome/mta188/local/lib/python3.10/dist-packages:$PYTHONPATH
			export PATH=/localhome/mta188/local/bin:$PATH
		Close the Terminal and open it again
		Validate the installation by typing the command "pip3 --version"
		Consider typing "pip" or "pyhton3 -m pip" if the error "command pip3 not recognized" occured while running the command "pip3 --version"
	Install SCons by doing the followings:
		Git clone from a repo containing scons-4.9.1 (ask ChatGPT for repo)
		Install scons by typing the command "python3 setup.py install --user --target=/localhome/mta188/local"
		Go to Home/local/bin and create a Python file and name it "scons.py"
		Then add the following to the scons.py:
			#!/usr/bin/env python3
			import sys
			from SCons.Script import Environment, main

			env = Environment()
			env.Append(CXXFLAGS=["-Wno-error=missing-field-initializers"])

			if __name__ == "__main__":
			    sys.exit(main())
		Make this file executable by running "chmod +x /localhome/mta188/local/bin/scons.py" command in terminal 
	At the end, install Accelergy-Timeloop by doing the followings:
		To install GPM (General Purpose Mouse) library, do the followings:
			Open Terminal
			Run "wget http://www.nico.schottelius.org/software/gpm/archives/gpm-1.20.7.tar.bz2"
			    "tar -xjf gpm-1.20.7.tar.bz2"
			    "cd gpm-1.20.7"
			    "./autogenerate" # this command generates ./configure file
			    "./configure --prefix=/localhome/mta188/local"
			    "make"
			    "make install"
			To avoid errors, try changing "timestamp -t" to "extern timestamp -t", "--sigme" to "sigme" and including system_macros.h (The file which should be changed will be shown in the
			error message)
			     
		To install Yaml library, delete the dynamic version of Yaml library and reinstall the static version of Yaml library with the help of ChatGPT
		Open Home/accelergy-timeloop-infrastructure/Makefile and replace the section "install_timeloop" with the following code:
			mkdir -p /tmp/build-timeloop

			#sudo apt-get update \
			#	&& sudo DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata \
			#	&& sudo apt-get install -y --no-install-recommends \
			#					locales \
			#					curl \
			#					git \
			#					wget \
			#					python3-dev \
			#					python3-pip \
			#					scons \
			#					make \
			#					autotools-dev \
			#					autoconf \
			#					automake \
			#					libtool \
			#	&& sudo apt-get install -y --no-install-recommends \
			#					g++ \
			#					cmake

			#sudo apt-get update \
			#	&& sudo apt-get install -y --no-install-recommends \
			#					g++ \
			#					libconfig++-dev \
			#					libboost-dev \
			#					libboost-filesystem-dev \
			#					libboost-iostreams-dev \
			#					libboost-log-dev \
			#					libboost-serialization-dev \
			#					libboost-thread-dev \
			#					libyaml-cpp-dev \
			#					libncurses5-dev \
			#					libtinfo-dev \
			#					libgpm-dev \
			#					libgmp-dev

			cd /tmp/build-timeloop \
				&& wget https://libntl.org/ntl-${NTL_VER}.tar.gz \
				&& tar -xvzf ntl-${NTL_VER}.tar.gz \
				&& cd ntl-${NTL_VER}/src \
				&& ./configure DEF_PREFIX=/localhome/mta188/local NTL_GMP_LIP=on GMP_PREFIX=/localhome/mta188/local SHARED=on \
				&& make -j8 \
				&& make install

			export PKG_CONFIG_PATH=/localhome/mta188/local/lib/pkgconfig:$PKG_CONFIG_PATH
			cd /tmp/build-timeloop \
			    && wget https://barvinok.sourceforge.io/barvinok-${BARVINOK_VER}.tar.gz \
				&& tar -xvzf barvinok-${BARVINOK_VER}.tar.gz \
				&& cd barvinok-${BARVINOK_VER} \
				&& ./configure ac_default_prefix=/localhome/mta188/local --enable-shared-barvinok --with-glpk-prefix=/localhome/mta188/local NTL_GMP_LIP=on GMP_PREFIX=/localhome/mta188/local CPPFLAGS="-I/localhome/mta188/local/include" LDFLAGS="-L/localhome/mta188/local/lib"\
				&& make -j8 \
				&& make install
				

			cd src/timeloop \
				&& cp -r pat-public/src/pat src/pat  \
				&& scons -j8 --with-isl --static --accelergy CXX="g++ -Wno-error=missing-field-initializers" LDFLAGS+="-L/localhome/mta188/local/lib -lglpk"\
				&& scons -j8 --with-isl --accelergy CXX="g++ -Wno-error=missing-field-initializers" LDFLAGS+="-L/localhome/mta188/local/lib -lglpk"


			cp src/timeloop/build/timeloop-mapper  ~/.local/bin/timeloop-mapper
			cp src/timeloop/build/timeloop-metrics ~/.local/bin/timeloop-metrics
			cp src/timeloop/build/timeloop-model ~/.local/bin/timeloop-model		    
