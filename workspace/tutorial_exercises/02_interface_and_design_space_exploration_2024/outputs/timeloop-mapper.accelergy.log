2025-06-23 23:27:49 INFO            _                _                      
2025-06-23 23:27:49 INFO           / \   ___ ___ ___| | ___ _ __ __ _ _   _ 
2025-06-23 23:27:49 INFO          / _ \ / __/ __/ _ \ |/ _ \ '__/ _` | | | |
2025-06-23 23:27:49 INFO         / ___ \ (_| (_|  __/ |  __/ | | (_| | |_| |
2025-06-23 23:27:49 INFO        /_/   \_\___\___\___|_|\___|_|  \__, |\__, |
2025-06-23 23:27:49 INFO                                        |___/ |___/ 
2025-06-23 23:27:49 INFO        generating outputs according to the following specified output flags... 
2025-06-23 23:27:49 INFO         Please use the -f flag to update the preference (default to all output files)
2025-06-23 23:27:49 INFO        {'ERT': 1, 'ERT_summary': 1, 'ART': 1, 'ART_summary': 1, 'energy_estimation': 1, 'flattened_arch': 1}
2025-06-23 23:27:49 INFO        Located config file at /home/workspace/.config/accelergy/accelergy_config.yaml.
2025-06-23 23:27:49 INFO        config file located:
2025-06-23 23:27:49 INFO        /home/workspace/.config/accelergy/accelergy_config.yaml
2025-06-23 23:27:49 INFO        Parsing file /home/workspace/tutorial_exercises/02_interface_and_design_space_exploration_2024/outputs/parsed-processed-input.yaml for architecture info
2025-06-23 23:27:49 INFO        Parsing file /home/workspace/tutorial_exercises/02_interface_and_design_space_exploration_2024/outputs/parsed-processed-input.yaml for compound_components info
2025-06-23 23:27:49 INFO        Adding required action "write" to class DRAM
2025-06-23 23:27:49 INFO        Adding required action "update" to class DRAM
2025-06-23 23:27:49 INFO        Adding required action "leak" to class DRAM
2025-06-23 23:27:49 INFO        Adding required action "read" to class DRAM
2025-06-23 23:27:49 INFO        Adding required action "write" to class SRAM
2025-06-23 23:27:49 INFO        Adding required action "update" to class SRAM
2025-06-23 23:27:49 INFO        Adding required action "leak" to class SRAM
2025-06-23 23:27:49 INFO        Adding required action "read" to class SRAM
2025-06-23 23:27:49 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/accelergy-aladdin-plug-in/aladdin.estimator.yaml
2025-06-23 23:27:49 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/accelergy-adc-plug-in/adc.estimator.yaml
2025-06-23 23:27:49 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/accelergy-library-plugin/library.estimator.yaml
2025-06-23 23:27:49 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/accelergy-neurosim-plugin/neurosim.estimator.yaml
2025-06-23 23:27:49 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti.estimator.yaml
2025-06-23 23:27:49 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/accelergy-table-based-plug-ins/table.estimator.yaml
2025-06-23 23:27:49 INFO        Estimator plug-in identified by: /usr/local/share/accelergy/estimation_plug_ins/dummy_tables/dummy.estimator.yaml
2025-06-23 23:27:49 INFO        Loading Python plug-in: /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_wrapper.py. Errors below are likely due to plug-in, not Accelergy.
2025-06-23 23:27:49 INFO        Getting all estimators in module <module 'python_plug_in0' from '/usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_wrapper.py'>
2025-06-23 23:27:49 INFO        Added estimator CactiCache that estimates cache with actions idle, read, read_access, update, update_access, write, write_access, leak
2025-06-23 23:27:49 INFO        Added estimator CactiDRAM that estimates ['DRAM', 'dram'] with actions idle, read, update, write, leak
2025-06-23 23:27:49 INFO        Added estimator CactiSRAM that estimates ['SRAM', 'sram'] with actions idle, read, update, write, leak
2025-06-23 23:27:49 INFO        Done loading Python plug-ins.
2025-06-23 23:27:49 INFO        Found estimator plug-in: Aladdin_table (<AladdinTable.AladdinTable object at 0x7fb8c8753610>)
2025-06-23 23:27:49 INFO        Found estimator plug-in: ADC Plug-In (<ADCEstimator.ADCEstimator object at 0x7fb8c8752e30>)
2025-06-23 23:27:49 INFO        Found estimator plug-in: Library (<LibraryEstimator.LibraryEstimator object at 0x7fb8c89f0310>)
2025-06-23 23:27:49 INFO        Found estimator plug-in: Neurosim Plug-In (<NeuroWrapper.NeuroWrapper object at 0x7fb8c863a2f0>)
2025-06-23 23:27:49 INFO        Found estimator plug-in: DEPRECATED table-based-plug-ins. Use the Library plug-in instead. (<SetsOfTables.SetsOfTables object at 0x7fb8c86398d0>)
2025-06-23 23:27:49 INFO        Found estimator plug-in: dummy (<DummyTable.DummyTable object at 0x7fb8c869b9d0>)
2025-06-23 23:27:49 INFO        Found estimator plug-in: CactiCache (<accelergy.plug_in_interface.estimator_wrapper.EstimatorWrapper object at 0x7fb8c86d8190>)
2025-06-23 23:27:49 INFO        Found estimator plug-in: CactiDRAM (<accelergy.plug_in_interface.estimator_wrapper.EstimatorWrapper object at 0x7fb8c86d92a0>)
2025-06-23 23:27:49 INFO        Found estimator plug-in: CactiSRAM (<accelergy.plug_in_interface.estimator_wrapper.EstimatorWrapper object at 0x7fb8c86da350>)
2025-06-23 23:27:49 INFO        Calculated adder."width" as "adder_width" = 16.
2025-06-23 23:27:49 INFO        Calculated multiplier."width" as "multiplier_width" = 8.
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        ENERGY ESTIMATION for DRAM(type=LPDDR4, depth=512, width=64, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1)
2025-06-23 23:27:49 INFO        CactiDRAM estimated 5.12e-10 with accuracy 80%. Messages:
2025-06-23 23:27:49 INFO        | Unused arguments (depth, datawidth, has_power_gating, n_banks, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, technology, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for ['DRAM', 'dram'].__init__. Arguments used: (type, width)
2025-06-23 23:27:49 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for ['DRAM', 'dram'].write. Arguments used: ()
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        ENERGY ESTIMATION for DRAM(type=LPDDR4, depth=512, width=64, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).update(global_cycle_seconds=1e-09, action_latency_cycles=1)
2025-06-23 23:27:49 INFO        CactiDRAM estimated 5.12e-10 with accuracy 80%. Messages:
2025-06-23 23:27:49 INFO        | Unused arguments (depth, datawidth, has_power_gating, n_banks, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, technology, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for ['DRAM', 'dram'].__init__. Arguments used: (type, width)
2025-06-23 23:27:49 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for ['DRAM', 'dram'].update. Arguments used: ()
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        ENERGY ESTIMATION for DRAM(type=LPDDR4, depth=512, width=64, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1)
2025-06-23 23:27:49 INFO        CactiDRAM estimated 0 with accuracy 80%. Messages:
2025-06-23 23:27:49 INFO        | Unused arguments (depth, datawidth, has_power_gating, n_banks, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, technology, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for ['DRAM', 'dram'].__init__. Arguments used: (type, width)
2025-06-23 23:27:49 INFO        | Unused arguments (action_latency_cycles) provided for ['DRAM', 'dram'].leak. Arguments used: (global_cycle_seconds)
2025-06-23 23:27:49 INFO        | Multiplying by n_instances 1
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        ENERGY ESTIMATION for DRAM(type=LPDDR4, depth=512, width=64, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).read(global_cycle_seconds=1e-09, action_latency_cycles=1)
2025-06-23 23:27:49 INFO        CactiDRAM estimated 5.12e-10 with accuracy 80%. Messages:
2025-06-23 23:27:49 INFO        | Unused arguments (depth, datawidth, has_power_gating, n_banks, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, technology, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for ['DRAM', 'dram'].__init__. Arguments used: (type, width)
2025-06-23 23:27:49 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for ['DRAM', 'dram'].read. Arguments used: ()
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        ENERGY ESTIMATION for SRAM(depth=512, width=128, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1)
2025-06-23 23:27:49 INFO        CactiSRAM estimated 1.26203e-11 with accuracy 80%. Messages:
2025-06-23 23:27:49 INFO        | Unused arguments (datawidth, has_power_gating, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (depth, width, n_banks, technology)
2025-06-23 23:27:49 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for ['SRAM', 'sram'].write. Arguments used: ()
2025-06-23 23:27:49 INFO        | Calling CACTI with cache_size=8192 n_rw_ports=1 block_size=16 tech_node_um=0.045 n_banks=2 tag_size=0 associativity=1
2025-06-23 23:27:49 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp83g7qsxz
2025-06-23 23:27:49 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpisy5pxl0
2025-06-23 23:27:49 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-06-23 23:27:49 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp83g7qsxz >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpisy5pxl0 2>&1
2025-06-23 23:27:49 INFO        | Cache bandwidth: 32.0 bytes/cycle
2025-06-23 23:27:49 INFO        | Cache bandwidth: 331755765552.3474 bits/second
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        ENERGY ESTIMATION for SRAM(depth=512, width=128, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).update(global_cycle_seconds=1e-09, action_latency_cycles=1)
2025-06-23 23:27:49 INFO        CactiSRAM estimated 1.26203e-11 with accuracy 80%. Messages:
2025-06-23 23:27:49 INFO        | Unused arguments (datawidth, has_power_gating, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (depth, width, n_banks, technology)
2025-06-23 23:27:49 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for ['SRAM', 'sram'].update. Arguments used: ()
2025-06-23 23:27:49 INFO        | Calling CACTI with cache_size=8192 n_rw_ports=1 block_size=16 tech_node_um=0.045 n_banks=2 tag_size=0 associativity=1
2025-06-23 23:27:49 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp_t4iwnup
2025-06-23 23:27:49 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmplr_k57t1
2025-06-23 23:27:49 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-06-23 23:27:49 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp_t4iwnup >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmplr_k57t1 2>&1
2025-06-23 23:27:49 INFO        | Cache bandwidth: 32.0 bytes/cycle
2025-06-23 23:27:49 INFO        | Cache bandwidth: 331755765552.3474 bits/second
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        ENERGY ESTIMATION for SRAM(depth=512, width=128, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1)
2025-06-23 23:27:49 INFO        CactiSRAM estimated 2.71132e-16 with accuracy 80%. Messages:
2025-06-23 23:27:49 INFO        | Unused arguments (datawidth, has_power_gating, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (depth, width, n_banks, technology)
2025-06-23 23:27:49 INFO        | Unused arguments (action_latency_cycles) provided for ['SRAM', 'sram'].leak. Arguments used: (global_cycle_seconds)
2025-06-23 23:27:49 INFO        | Calling CACTI with cache_size=8192 n_rw_ports=1 block_size=16 tech_node_um=0.045 n_banks=2 tag_size=0 associativity=1
2025-06-23 23:27:49 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp_slto44s
2025-06-23 23:27:49 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp1ddms_s_
2025-06-23 23:27:49 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-06-23 23:27:49 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp_slto44s >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp1ddms_s_ 2>&1
2025-06-23 23:27:49 INFO        | Cache bandwidth: 32.0 bytes/cycle
2025-06-23 23:27:49 INFO        | Cache bandwidth: 331755765552.3474 bits/second
2025-06-23 23:27:49 INFO        | Multiplying by n_instances 1
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        ENERGY ESTIMATION for SRAM(depth=512, width=128, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).read(global_cycle_seconds=1e-09, action_latency_cycles=1)
2025-06-23 23:27:49 INFO        CactiSRAM estimated 9.65335e-12 with accuracy 80%. Messages:
2025-06-23 23:27:49 INFO        | Unused arguments (datawidth, has_power_gating, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (depth, width, n_banks, technology)
2025-06-23 23:27:49 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for ['SRAM', 'sram'].read. Arguments used: ()
2025-06-23 23:27:49 INFO        | Calling CACTI with cache_size=8192 n_rw_ports=1 block_size=16 tech_node_um=0.045 n_banks=2 tag_size=0 associativity=1
2025-06-23 23:27:49 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpwzrwhlif
2025-06-23 23:27:49 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpikb6k8yt
2025-06-23 23:27:49 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-06-23 23:27:49 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpwzrwhlif >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpikb6k8yt 2>&1
2025-06-23 23:27:49 INFO        | Cache bandwidth: 32.0 bytes/cycle
2025-06-23 23:27:49 INFO        | Cache bandwidth: 331755765552.3474 bits/second
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        ENERGY ESTIMATION for aladdin_adder(width=16, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-06-23 23:27:49 INFO        Library estimated 0.13285030674433068p with accuracy 90%. Messages:
2025-06-23 23:27:49 INFO        | Found 1 entries for aladdin_adder.add.
2025-06-23 23:27:49 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'add', 'name': 'aladdin_adder', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | value=0.21, matching_attrs=2, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x energy', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x energy', 'Scaled aladdin_adder.technology from 40.0 to 45.0: 1.265241016612673x energy', 'aladdin_adder energy has been scaled 0.6326205083063365x']
2025-06-23 23:27:49 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'add', 'name': 'aladdin_adder', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | Scaling width from 32 to 16
2025-06-23 23:27:49 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-06-23 23:27:49 INFO        | Scaling technology from 40nm to 45nm
2025-06-23 23:27:49 INFO        | Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x energy
2025-06-23 23:27:49 INFO        | Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x energy
2025-06-23 23:27:49 INFO        | Scaled aladdin_adder.technology from 40.0 to 45.0: 1.265241016612673x energy
2025-06-23 23:27:49 INFO        | aladdin_adder energy has been scaled 0.6326205083063365x
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        ENERGY ESTIMATION for aladdin_multiplier(width=8, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).multiply(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-06-23 23:27:49 INFO        Library estimated 4.010814022662173p with accuracy 90%. Messages:
2025-06-23 23:27:49 INFO        | Found 1 entries for aladdin_multiplier.multiply.
2025-06-23 23:27:49 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'multiply', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | value=12.68, matching_attrs=2, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x energy', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x energy', 'Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.265241016612673x energy', 'aladdin_multiplier energy has been scaled 0.31631025415316827x']
2025-06-23 23:27:49 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'multiply', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | Scaling width from 32 to 8
2025-06-23 23:27:49 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-06-23 23:27:49 INFO        | Scaling technology from 40nm to 45nm
2025-06-23 23:27:49 INFO        | Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x energy
2025-06-23 23:27:49 INFO        | Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x energy
2025-06-23 23:27:49 INFO        | Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.265241016612673x energy
2025-06-23 23:27:49 INFO        | aladdin_multiplier energy has been scaled 0.31631025415316827x
2025-06-23 23:27:49 WARNING     No action counts are specified as yaml input
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        AREA ESTIMATION for DRAM(type=LPDDR4, depth=512, width=64, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2025-06-23 23:27:49 INFO        CactiDRAM estimated 0 with accuracy 80%. Messages:
2025-06-23 23:27:49 INFO        | Unused arguments (depth, datawidth, has_power_gating, n_banks, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, technology, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for ['DRAM', 'dram'].__init__. Arguments used: (type, width)
2025-06-23 23:27:49 INFO        | Multiplying by n_instances 1
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        AREA ESTIMATION for SRAM(depth=512, width=128, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2025-06-23 23:27:49 INFO        CactiSRAM estimated 4.36084e-08 with accuracy 80%. Messages:
2025-06-23 23:27:49 INFO        | Unused arguments (datawidth, has_power_gating, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for ['SRAM', 'sram'].__init__. Arguments used: (depth, width, n_banks, technology)
2025-06-23 23:27:49 INFO        | Calling CACTI with cache_size=8192 n_rw_ports=1 block_size=16 tech_node_um=0.045 n_banks=2 tag_size=0 associativity=1
2025-06-23 23:27:49 INFO        | Calling CACTI with input path /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpyrr034rv
2025-06-23 23:27:49 INFO        | CACTI output will be written to /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp4y5enkds
2025-06-23 23:27:49 INFO        | CACTI executable not found at /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2025-06-23 23:27:49 INFO        | Calling: cd /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpyrr034rv >> /usr/local/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp4y5enkds 2>&1
2025-06-23 23:27:49 INFO        | Cache bandwidth: 32.0 bytes/cycle
2025-06-23 23:27:49 INFO        | Cache bandwidth: 331755765552.3474 bits/second
2025-06-23 23:27:49 INFO        | Multiplying by n_instances 1
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        AREA ESTIMATION for dummy_storage(width=1, depth=1, datawidth=1, technology=-1, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2025-06-23 23:27:49 INFO        dummy estimated 1u^2 with accuracy 100%. Messages:
2025-06-23 23:27:49 INFO        | Multiplying by n_instances 1
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        AREA ESTIMATION for aladdin_adder(width=16, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-06-23 23:27:49 INFO        Library estimated 241.64615384615385u^2 with accuracy 90%. Messages:
2025-06-23 23:27:49 INFO        | Found 5 entries for aladdin_adder.
2025-06-23 23:27:49 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'add', 'name': 'aladdin_adder', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | value=278.0, matching_attrs=2, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_adder.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_adder area has been scaled 0.8692307692307693x']
2025-06-23 23:27:49 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'read', 'name': 'aladdin_adder', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | value=278.0, matching_attrs=2, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_adder.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_adder area has been scaled 0.8692307692307693x']
2025-06-23 23:27:49 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.0024', 'area': '2.78E+02', 'action': 'leak', 'name': 'aladdin_adder', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | value=278.0, matching_attrs=2, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_adder.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_adder area has been scaled 0.8692307692307693x']
2025-06-23 23:27:49 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0', 'area': '2.78E+02', 'action': 'update', 'name': 'aladdin_adder', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | value=278.0, matching_attrs=2, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_adder.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_adder area has been scaled 0.8692307692307693x']
2025-06-23 23:27:49 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0', 'area': '2.78E+02', 'action': 'write', 'name': 'aladdin_adder', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | value=278.0, matching_attrs=2, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_adder.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_adder area has been scaled 0.8692307692307693x']
2025-06-23 23:27:49 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'add', 'name': 'aladdin_adder', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | Scaling width from 32 to 16
2025-06-23 23:27:49 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-06-23 23:27:49 INFO        | Scaling technology from 40nm to 45nm
2025-06-23 23:27:49 INFO        | Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area
2025-06-23 23:27:49 INFO        | Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area
2025-06-23 23:27:49 INFO        | Scaled aladdin_adder.technology from 40.0 to 45.0: 1.7384615384615385x area
2025-06-23 23:27:49 INFO        | aladdin_adder area has been scaled 0.8692307692307693x
2025-06-23 23:27:49 INFO        | Multiplying by n_instances 1
2025-06-23 23:27:49 INFO        
2025-06-23 23:27:49 INFO        AREA ESTIMATION for aladdin_multiplier(width=8, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2025-06-23 23:27:49 INFO        Library estimated 2759.8076923076924u^2 with accuracy 90%. Messages:
2025-06-23 23:27:49 INFO        | Found 5 entries for aladdin_multiplier.
2025-06-23 23:27:49 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'multiply', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | value=6350.0, matching_attrs=2, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_multiplier area has been scaled 0.4346153846153846x']
2025-06-23 23:27:49 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'read', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | value=6350.0, matching_attrs=2, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_multiplier area has been scaled 0.4346153846153846x']
2025-06-23 23:27:49 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0.08', 'area(um^2)': '6350', 'action': 'leak', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | value=6350.0, matching_attrs=2, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_multiplier area has been scaled 0.4346153846153846x']
2025-06-23 23:27:49 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0', 'area(um^2)': '6350', 'action': 'update', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | value=6350.0, matching_attrs=2, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_multiplier area has been scaled 0.4346153846153846x']
2025-06-23 23:27:49 INFO        | Checking entry "{'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0', 'area(um^2)': '6350', 'action': 'write', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | value=6350.0, matching_attrs=2, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaling technology from 40nm to 45nm', 'Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.7384615384615385x area', 'aladdin_multiplier area has been scaled 0.4346153846153846x']
2025-06-23 23:27:49 INFO        | Best-matching entry: {'technology': '40nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'multiply', 'name': 'aladdin_multiplier', 'n_instances': 1}
2025-06-23 23:27:49 INFO        | Scaling width from 32 to 8
2025-06-23 23:27:49 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2025-06-23 23:27:49 INFO        | Scaling technology from 40nm to 45nm
2025-06-23 23:27:49 INFO        | Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x area
2025-06-23 23:27:49 INFO        | Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area
2025-06-23 23:27:49 INFO        | Scaled aladdin_multiplier.technology from 40.0 to 45.0: 1.7384615384615385x area
2025-06-23 23:27:49 INFO        | aladdin_multiplier area has been scaled 0.4346153846153846x
2025-06-23 23:27:49 INFO        | Multiplying by n_instances 1
2025-06-23 23:27:49 INFO        flattened architecture is saved to:
2025-06-23 23:27:49 INFO        ./timeloop-mapper.flattened_architecture.yaml
2025-06-23 23:27:49 INFO        energy reference table is saved to:
2025-06-23 23:27:49 INFO        ./timeloop-mapper.ERT.yaml
2025-06-23 23:27:49 INFO        energy reference table summary is saved to:
2025-06-23 23:27:49 INFO        ./timeloop-mapper.ERT_summary.yaml
2025-06-23 23:27:49 WARNING     no runtime energy estimations are generated... not generating energy_estimation.yaml
2025-06-23 23:27:49 INFO        area reference table is saved to:
2025-06-23 23:27:49 INFO        ./timeloop-mapper.ART.yaml
2025-06-23 23:27:49 INFO        area reference table summary is saved to:
2025-06-23 23:27:49 INFO        ./timeloop-mapper.ART_summary.yaml
